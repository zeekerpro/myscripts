#!/bin/bash
# Script to manage frpc


#!/bin/bash

CONFIG_DIR="/opt/homebrew/etc/frp"
LOG_DIR="/opt/homebrew/var/log"
RUN_DIR="/opt/homebrew/var/run"

list_configs() {
    echo "Available configurations:"
    for config in "$CONFIG_DIR"/*.toml; do
        filename=$(basename "$config")
        echo "  ${filename%.toml}"
    done
}

get_config_path() {
    local config_name="$1"
    echo "$CONFIG_DIR/${config_name}.toml"
}

get_log_path() {
    local config_name="$1"
    echo "$LOG_DIR/frpc_${config_name}.log"
}

get_pid_file() {
    local config_name="$1"
    echo "$RUN_DIR/frpc_${config_name}.pid"
}

start_frpc() {
    local config_name="$1"
    local config_path=$(get_config_path "$config_name")
    local log_path=$(get_log_path "$config_name")
    local pid_file=$(get_pid_file "$config_name")

    if [ ! -f "$config_path" ]; then
        echo "Configuration file $config_path does not exist."
        return 1
    fi

    if [ -f "$pid_file" ] && kill -0 $(cat "$pid_file") 2>/dev/null; then
        echo "frpc ($config_name) is already running."
    else
        echo "Starting frpc ($config_name)..."
        nohup frpc -c "$config_path" > "$log_path" 2>&1 &
        echo $! > "$pid_file"
        echo "frpc ($config_name) started. Logs are being recorded in $log_path"
    fi
}

stop_frpc() {
    local config_name="$1"
    local pid_file=$(get_pid_file "$config_name")

    if [ -f "$pid_file" ] && kill -0 $(cat "$pid_file") 2>/dev/null; then
        echo "Stopping frpc ($config_name)..."
        kill $(cat "$pid_file") && rm -f "$pid_file"
        echo "frpc ($config_name) stopped."
    else
        echo "frpc ($config_name) is not running."
    fi
}

status_frpc() {
    local config_name="$1"
    local pid_file=$(get_pid_file "$config_name")

    if [ -f "$pid_file" ] && kill -0 $(cat "$pid_file") 2>/dev/null; then
        echo "frpc ($config_name) is running."
    else
        echo "frpc ($config_name) is not running."
    fi
}

log_frpc() {
    local config_name="$1"
    local log_path=$(get_log_path "$config_name")

    if [ -f "$log_path" ]; then
        tail -f "$log_path"
    else
        echo "Log file $log_path does not exist."
    fi
}

show_help() {
    echo "Usage: $0 {list|start <config>|stop <config>|status <config>|log <config>|-h}"
    echo "  list              - List available configurations"
    echo "  start <config>    - Start frpc with specified configuration"
    echo "  stop <config>     - Stop frpc with specified configuration"
    echo "  status <config>   - Show frpc status for specified configuration"
    echo "  log <config>      - Show frpc log for specified configuration"
    echo "  -h                - Display this help message"
}

case "$1" in
    list)
        list_configs
        ;;
    start|stop|status|log)
        if [ -z "$2" ]; then
            echo "Error: Configuration name is required for $1 command."
            show_help
            exit 1
        fi
        "${1}_frpc" "$2"
        ;;
    -h|--help)
        show_help
        ;;
    *)
        echo "Invalid option. Use -h to see the help message."
        exit 1
esac
